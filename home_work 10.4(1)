import threading
import random
import time
from queue import Queue

class Table:
    def __init__(self, number):
        self.number = number
        self.guest = None

class Guest(threading.Thread):
    def __init__(self, name):
        super().__init__()
        self.name = name

    def run(self):
        print(f'{self.name} is waiting...')
        time.sleep(random.randint(3, 10))
        print(f'{self.name} is seated at a table.')

class Cafe:
    def __init__(self, *tables):
        self.queue = Queue()
        self.tables = list(tables)

    def guest_arrival(self, guest):
        self.queue.put(guest)

    def discuss_guests(self):
        while not self.queue.empty():
            guest = self.queue.get()
            for table in self.tables:
                if table.guest is None:
                    table.guest = guest
                    guest.start()
                    break

table1 = Table(1)
table2 = Table(2)
table3 = Table(3)

cafe = Cafe(table1, table2, table3)

guest1 = Guest('Vasya')
guest2 = Guest('Petya')
guest3 = Guest('Masha')

cafe.guest_arrival(guest1)
cafe.guest_arrival(guest2)
cafe.guest_arrival(guest3)

cafe.discuss_guests()
