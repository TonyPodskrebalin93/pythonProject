from threading import Thread, Lock
import time
from random import randint


class Bank:
    def __init__(self):
        self.balance = 0
        self.lock = Lock()

    def deposit(self):
        dep_money = randint(50, 500)
        for i in range(100):
            self.balance += dep_money
            if self.balance >= 500 and self.lock.locked():
                self.lock.release()
            print(f"Пополнение {dep_money}. Баланс:{self.balance}")
            time.sleep(0.001)

    def take(self):
        for _ in range(100):
            take_money = randint(a=50, b=500)
            print(f"Запрос на {take_money}")

            if self.balance >= take_money:
                self.balance -= take_money
            print(f'Снятие: {take_money}. Баланс: {self.balance}')
        else:
            print('Запрос отклонён, недостаточно средств')
            self.lock.acquire()
            time.sleep(0.001)


bk = Bank()

th1 = Thread(target=Bank.deposit, args=(bk,))
th2 = Thread(target=Bank.take, args=(bk,))

th1.start()
th2.start()
th1.join()
th2.join()
print((f'Итоговый баланс: {bk.balance}'))
